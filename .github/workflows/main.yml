name: API

on:
  push:
    branches: [main]

jobs:
  API:
    runs-on: ubuntu-latest

    steps:
     - name: Checkout repository
       uses: actions/checkout@v3
       
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2 
      
     - name: Docker Login
       uses: docker/login-action@v3
       with:
           username: ${{ secrets.USER }}
           password: ${{ secrets.PASSWORD }}
           
     - name: Build and push Docker images
       uses: docker/build-push-action@v4
       with:
         context: .
         file: ./Dockerfile
         push: true
         tags: |
           lenepires19/web:v1
           lenepires19/web:latest
           
     - name: Aqua Security Trivy Scan
       uses: aquasecurity/trivy-action@0.25.0
       with:
         scan-type: image
         image-ref: lenepires19/web:latest
         format: table
         output: trivy-results.txt

     - name: Display Trivy results
       run: |
         echo "Scan result:"
         cat trivy-results.txt

     - name: count_vulns
       run: |
         CRITICAL=$(grep -i "CRITICAL:" trivy-results.txt | wc -l)
         HIGH=$(grep -i "HIGH:" trivy-results.txt | wc -l)
         MEDIUM=$(grep -i "MEDIUM:" trivy-results.txt | wc -l)
         LOW=$(grep -i "LOW:" trivy-results.txt | wc -l)
         echo "Found $CRITICAL critical vulnerabilities."
         echo "Found $HIGH high vulnerabilities."
         echo "Found $MEDIUM medium vulnerabilities."
         echo "Found $LOW low vulnerabilities."
         echo "::set-output name=critical::$CRITICAL"
         echo "::set-output name=high::$HIGH"
         echo "::set-output name=medium::$MEDIUM"
         echo "::set-output name=low::$LOW"

     
     - name: Fail on critical vulnerabilities
       if: steps.count_vulns.outputs.critical != '0'
       run: |
         echo "Scan failed due to critical vulnerabilities."
         exit 1
